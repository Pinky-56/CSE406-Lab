# -*- coding: utf-8 -*-
"""Lab-3

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GjffejuETyQGTLSy2XyCr1RA_ljbLr5N
"""

processes = ['p1', 'p2', 'p3', 'p4', 'p5']
arrival_time = [0, 1, 2, 3, 4]
burst_time = [5, 3, 1, 2, 3]
n = len(processes)
time_quantum = 2
remaining_bt = burst_time.copy()
completion_time = [0] * n
turnaround_time = [0] * n
waiting_time = [0] * n
queue = []
time = 0
visited = [False] * n
queue.append(0)
visited[0] = True

while queue:
    idx = queue.pop(0)
    if remaining_bt[idx] > time_quantum:
        time += time_quantum
        remaining_bt[idx] -= time_quantum
    else:
        time += remaining_bt[idx]
        remaining_bt[idx] = 0
        completion_time[idx] = time
    for i in range(n):
        if arrival_time[i] <= time and not visited[i] and remaining_bt[i] > 0:
            queue.append(i)
            visited[i] = True
    if remaining_bt[idx] > 0:
        queue.append(idx)
for i in range(n):
    turnaround_time[i] = completion_time[i] - arrival_time[i]
    waiting_time[i] = turnaround_time[i] - burst_time[i]
print('Pid\tAT\tBT\tCT\tTAT\tWT')
for i in range(n):
    print(f"{processes[i]}\t{arrival_time[i]}\t{burst_time[i]}\t{completion_time[i]}\t{turnaround_time[i]}\t{waiting_time[i]}")

avg_tat = sum(turnaround_time) / n
avg_wt = sum(waiting_time) / n
print(f"\nAverage Turnaround Time: {avg_tat:.2f}")
print(f"Average Waiting Time: {avg_wt:.2f}")